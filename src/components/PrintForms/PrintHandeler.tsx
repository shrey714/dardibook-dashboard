"use client";
import React, { useRef } from "react";
import { useReactToPrint } from "react-to-print";
import RefererPrint from "./RefererPrint";
import PrescriptionPrint from "./PrescriptionPrint";
import ReceiptPrint from "./ReceiptPrint";
import MedicalReportPrint from "./MedicalReportPrint";
import { Button } from "../ui/button";

const PrintHandeler: React.FC<any> = ({
  styleForBtn,
  printOptions,
  PrescriptionAndReferData,
  doctorData,
  patientData,
  receiptInfo,
}: any) => {
  const printRef = useRef(null);
  const handlePrint = useReactToPrint({
    content: () => printRef.current,
    pageStyle: `
        @page { 
          size: A4; 
          margin: 5mm; 
        }
        body {
          -webkit-print-color-adjust: exact;
        }
        .print-container {
          position: relative;
          width: 100%;
          height: 100%;
        }
        .print-footer {
          content: 'This report generated by DardiBook software';
          position: absolute;
          bottom: 10px;
          left: 0;
          width: 100%;
          text-align: center;
          font-size: 10px;
          color: gray;
        }
        .bg-cover {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-image: url('/Logo.svg');
          background-size: 60% 60%;
          opacity: 0.1;
          z-index: -1;
        }
        .page-break {
        page-break-before: always;
      }
      `,
  });

  return (
    <div className="w-full join-item flex flex-col">
      <Button
        onClick={handlePrint}
        className={styleForBtn}
      >
        {printOptions?.IsMedical ? "Print" : "Print Prescription"}
      </Button>
      <div ref={printRef} className="hide-this-compo">
        {printOptions?.IsPrescription ? (
          <PrescriptionPrint
            patientInfo={patientData}
            hospitalInfo={doctorData}
            prescriptionInfo={PrescriptionAndReferData}
          />
        ) : (
          <></>
        )}
        {printOptions?.IsPrescription && printOptions?.IsRefer ? (
          <div className="page-break"></div>
        ) : (
          <></>
        )}
        {printOptions?.IsRefer ? (
          <RefererPrint
            patientInfo={patientData}
            hospitalInfo={doctorData}
            refererInfo={PrescriptionAndReferData.refer}
          />
        ) : (
          <></>
        )}

        {(printOptions?.IsPrescription || printOptions?.IsRefer) &&
        printOptions?.IsReceipt ? (
          <div className="page-break"></div>
        ) : (
          <></>
        )}

        {printOptions?.IsReceipt ? (
          <ReceiptPrint
            patientInfo={patientData}
            hospitalInfo={doctorData}
            receiptInfo={receiptInfo}
          />
        ) : (
          <></>
        )}

        {printOptions?.IsMedical ? (
          <MedicalReportPrint
            patientInfo={patientData}
            hospitalInfo={doctorData}
            prescriptionInfo={PrescriptionAndReferData}
          />
        ) : (
          <></>
        )}
      </div>
    </div>
  );
};

export default PrintHandeler;
